# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: linux
  pool:
    vmImage: ubuntu-16.04
  strategy:
    matrix:
      ? linux_64_cross_target_platformlinux-64rust_archx86_64-unknown-linux-gnurust_arch_envX86_64_UNKNOWN_LINUX_GNUrust_default_ccx86_64-conda-linux-gnu-cc
      : CONFIG: linux_64_cross_target_platformlinux-64rust_archx86_64-unknown-linux-gnurust_arch_envX86_64_UNKNOWN_LINUX_GNUrust_default_ccx86_64-conda-linux-gnu-cc
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: condaforge/linux-anvil-comp7
      ? linux_64_cross_target_platformlinux-aarch64rust_archaarch64-unknown-linux-gnurust_arch_envAARCH64_UNKNOWN_LINUX_GNUrust_default_ccaarch64-conda-linux-gnu-cc
      : CONFIG: linux_64_cross_target_platformlinux-aarch64rust_archaarch64-unknown-linux-gnurust_arch_envAARCH64_UNKNOWN_LINUX_GNUrust_default_ccaarch64-conda-linux-gnu-cc
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: condaforge/linux-anvil-comp7
      ? linux_64_cross_target_platformlinux-ppc64lerust_archpowerpc64le-unknown-linux-gnurust_arch_envPOWERPC64LE_UNKNOWN_LINUX_GNUrust_default_ccpowerpc64le-conda-linux-gnu-cc
      : CONFIG: linux_64_cross_target_platformlinux-ppc64lerust_archpowerpc64le-unknown-linux-gnurust_arch_envPOWERPC64LE_UNKNOWN_LINUX_GNUrust_default_ccpowerpc64le-conda-linux-gnu-cc
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: condaforge/linux-anvil-comp7
      ? linux_64_cross_target_platformosx-64rust_archx86_64-apple-darwinrust_arch_envX86_64_APPLE_DARWINrust_default_ccx86_64-apple-darwin13.4.0-clang
      : CONFIG: linux_64_cross_target_platformosx-64rust_archx86_64-apple-darwinrust_arch_envX86_64_APPLE_DARWINrust_default_ccx86_64-apple-darwin13.4.0-clang
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: condaforge/linux-anvil-comp7
    maxParallel: 8
  timeoutInMinutes: 360

  steps:
  - script: |
         rm -rf /opt/ghc
         df -h
    displayName: Manage disk space

  # configure qemu binfmt-misc running.  This allows us to run docker containers
  # embedded qemu-static
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static:register --reset --credential yes
      ls /proc/sys/fs/binfmt_misc/
    condition: not(startsWith(variables['CONFIG'], 'linux_64'))
    displayName: Configure binfmt_misc

  - script: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        .scripts/run_docker_build.sh
    displayName: Run docker build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)