# !! update of rust-activation version should be carried out together with rust version update !!
# https://github.com/AnacondaRecipes/rust-feedstock
{% set date = "2025-10-13" %}
{% set version = "1.92.0_" ~ date.replace('-', '_') %}

package:
  name: rust-nightly_{{ target_platform }}
  version: {{ version }}

build:
  number: 0

outputs:
  - name: rust-nightly_{{ target_platform }}
    script: build.sh  # [unix]
    script: bld-msvc.bat  # [win]
    build:
      skip: True  # [win and int(float(vc)) != 14]
    requirements:
      run:
        - rust-nightly >={{ version }}
        - {{ stdlib('c') }}
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
    test:
      files:
        - forge_test.sh  # [not win]
      commands:
        - time bash ./forge_test.sh  # [not win]
  - name: rust-nightly-gnu_{{ target_platform }}  # [win]
    script: bld-gnu.bat  # [win]
    requirements:  # [win]
      run:  # [win]
        - rust-gnu-nightly >={{ version }}  # [win]
        - m2w64-toolchain  # [win]
    test:  # [win]
      files:  # [win]
        - forge_test.sh  # [win]
      commands:  # [win]
        - rustc --help  # [win]
        - cargo --help  # [win]

about:
  home: https://www.rust-lang.org
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE.txt
  summary: A safe systems programming language (conda activation scripts)
  description: |
    Rust is a systems programming language that runs blazingly fast,
    prevents segfaults, and guarantees thread safety.
  doc_url: https://www.rust-lang.org/learn
  dev_url: https://github.com/rust-lang

extra:
  recipe-maintainers:
    - mingwandroid
  # For activation scripts, compilers must be in the run section
  # The compiler function is inappropriate here because a specific version is needed
  skip-lints:
    - compilers_must_be_in_build
    - should_use_compilers
    - output_script_name_default
